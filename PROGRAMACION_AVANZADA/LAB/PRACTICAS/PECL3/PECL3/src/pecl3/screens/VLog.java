
package pecl3.screens;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;

/**
 *
 * @author mr.blissfulgrin
 */
public class VLog extends javax.swing.JFrame
{

    /**
     * Creates new form Log
     */
    public VLog()
    {
        initComponents(); 
        getDiskInformation();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("FuelStation");
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                formWindowClosing(evt);
            }
        });

        jPanel1.setLayout(new java.awt.CardLayout(7, 7));

        jPanel2.setLayout(new java.awt.GridBagLayout());

        list.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        list.addListSelectionListener(new javax.swing.event.ListSelectionListener()
        {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt)
            {
                listValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(list);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 22;
        gridBagConstraints.ipady = 119;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jScrollPane1, gridBagConstraints);

        txt.setEditable(false);
        txt.setColumns(20);
        txt.setRows(5);
        txt.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txt.setDragEnabled(false);
        txt.setFocusable(false);
        txt.setOpaque(false);
        jScrollPane2.setViewportView(txt);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 223;
        gridBagConstraints.ipady = 63;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jScrollPane2, gridBagConstraints);

        jPanel1.add(jPanel2, "card2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
        VInicio i = new VInicio();
        i.setVisible(true);
    }//GEN-LAST:event_formWindowClosing
    public void getDiskInformation ()
    {
        String listado[]= new File("./src/txt").list();
        ArrayList <Sortable> listadoOrdenar = new ArrayList <>();
        
        for (String s : listado)
        {
            listadoOrdenar.add(new Sortable(s));
        }
        
        Collections.sort(listadoOrdenar, new Sorter());
        int counter = 0;
        
        for (String listado1 : listado)
        {
            if (listado1.charAt(0) == '.')
            {
                counter ++;
            }
        }
        
        String listadofinal[]= new String [listado.length-counter];
        
        int counter2 = 0;
        for (int i = 0; i < listado.length; i++)
        {
            if (listadoOrdenar.get(i).getStr().charAt(0) != '.')
            {
                listadofinal [i - counter2] = listadoOrdenar.get(i).getStr();
            }
            else
                counter2++;
        }
        
        list.setListData(listadofinal);
        
        try
        {
            txt.setText("Loading... please wait, it may take some time");
            String buff = "";
            String cadena;
            try(FileReader f = new FileReader("./src/txt/evoluvionGasolinera.txt"))
            {
                try (BufferedReader b = new BufferedReader(f)) 
                {
                    while((cadena = b.readLine())!=null) 
                    {
                        buff = (buff+"\n"+cadena);
                    }
                    b.close();
                    txt.setText(buff);
                }
                f.close();
            }
        }
        catch(IOException e)
        {
            System.out.println("IO EXCEPTION IN VLOG" + e.toString());
        }
    }
    private void listValueChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_listValueChanged
    {//GEN-HEADEREND:event_listValueChanged
        if (!"".equals(list.getSelectedValue()))
        {
            try
            {
                txt.setText("Loading... please wait, it may take some time");
                String buff = "";
                String cadena;
                FileReader f = new FileReader("./src/txt/"+list.getSelectedValue());
                try (BufferedReader b = new BufferedReader(f)) 
                {
                    while((cadena = b.readLine())!=null) 
                    {
                        buff = (buff+"\n"+cadena);
                    }
                    b.close();
                    txt.setText(buff);
                }
            }
            catch(IOException e)
            {
                System.out.println("IO EXCEPTION IN VLOG" + e.toString());
            }
        }
    }//GEN-LAST:event_listValueChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> list;
    private javax.swing.JTextArea txt;
    // End of variables declaration//GEN-END:variables
}
